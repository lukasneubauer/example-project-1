build:
    image:
        name: docker/compose:1.29.2
    services:
        - docker:dind
    variables:
        API_KEY: 'aph8a8yf9jqmez6a8k9786v4gp988y6pp597gvqxfodcv2ozxqbpbc5qhkmrxldax3xwuhx4a1kr7b0rixxf0beypyaka1hbvdphfgbers8akwuvtbhi2nhg'
        APP_ENV: 'test'
        APP_DEBUG: '1'
        APP_SECRET: 'ThisTokenIsNotSoSecretChangeIt'
        DATABASE_USERNAME: 'root'
        DATABASE_PASSWORD: 'root'
        DATABASE_HOST: 'db'
        DATABASE_PORT: '3306'
        DATABASE_NAME: 'db'
        MAILER_DSN: 'null://null'
        WWW_DATA_UID: '1001'
        WWW_DATA_GID: '1001'
        ENABLE_XDEBUG: '0'
        COMPOSE_PROJECT_NAME: 'api'
        COMPOSE_FILE: 'docker/config/mysql.yml:docker/config/nginx.yml:docker/config/php.yml'
        DOCKER_HOST: 'tcp://docker:2375'
        DOCKER_DRIVER: 'overlay2'
        DOCKER_TLS_CERTDIR: ''
    cache:
        - key:
            files:
                - composer.lock
          paths:
              - vendor
        - key:
            files:
                - package-lock.json
          paths:
              - node_modules
    script:
        - docker-compose build
        - docker-compose up -d
        - test -d vendor && docker cp vendor api-php:/var/www/html/vendor || true
        - test -d node_modules && docker cp node_modules api-php:/var/www/html/node_modules || true
        - docker-compose exec -T -u root:root php composer --ansi install --no-interaction
        - docker-compose exec -T -u root:root php php scripts/console --ansi doctrine:schema:validate --skip-sync
        - docker-compose exec -T -u root:root php php scripts/console --ansi lint:container -v
        - docker-compose exec -T -u root:root php php scripts/console --ansi lint:twig templates -v
        - docker-compose exec -T -u root:root php php scripts/console --ansi lint:yaml config -v
        - docker-compose exec -T -u root:root php php scripts/console --ansi lint:yaml translations -v
        - docker-compose exec -T -u root:root php php vendor/bin/parallel-lint --colors src tests
        - docker-compose exec -T -u root:root php php vendor/bin/php-cs-fixer --ansi fix -v --diff --show-progress dots --dry-run
        - docker-compose exec -T -u root:root php php vendor/bin/phpmd src,tests text unusedcode
        - docker-compose exec -T -u root:root php php vendor/bin/phpstan --ansi analyse --level 6 --configuration phpstan.neon --memory-limit 512M src tests
        - docker-compose exec -T -u root:root php php scripts/console --ansi doctrine:database:create --if-not-exists
        - docker-compose exec -T -u root:root php php scripts/console --ansi doctrine:schema:drop --full-database --force
        - docker-compose exec -T -u root:root php php scripts/console --ansi doctrine:migrations:migrate --no-interaction
        - docker-compose exec -T -u root:root php php scripts/load_fixtures_for_phpunit
        - docker-compose exec -T -u root:root php php vendor/bin/phpunit --colors=always --log-junit=phpunit-results.xml
        - docker-compose exec -T -u root:root php php scripts/console --ansi doctrine:schema:drop --full-database --force
        - docker-compose exec -T -u root:root php php scripts/console --ansi doctrine:migrations:migrate --no-interaction
        - docker-compose exec -T -u root:root php php scripts/load_fixtures_for_dredd
        - docker-compose exec -T -u root:root php npm ci
        - docker-compose exec -T -u root:root php node node_modules/.bin/dredd --reporter xunit --output dredd-results.xml
        - docker cp api-php:/var/www/html/vendor vendor
        - docker cp api-php:/var/www/html/node_modules node_modules
        - docker cp api-php:/var/www/html/var/log logs
        - docker cp api-php:/var/www/html/phpunit-results.xml phpunit-results.xml
        - docker cp api-php:/var/www/html/dredd-results.xml dredd-results.xml
    artifacts:
        paths:
            - logs
        reports:
            junit:
                - phpunit-results.xml
                - dredd-results.xml
